Index: server/src/main/java/org/Server/GUI/Controllers/ServerManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.Server.GUI.Controllers;\n\nimport Interfaces.ServiceFactoryI;\nimport javafx.fxml.FXML;\nimport javafx.fxml.Initializable;\nimport javafx.scene.control.Button;\nimport org.Server.Repository.DatabaseConnectionManager;\nimport org.Server.Repository.UserRepository;\nimport org.Server.Service.Factories.ServiceFactory;\nimport org.Server.Service.Factories.UserServiceFactory;\nimport org.Server.Service.User.LoginService;\nimport org.Server.Service.User.RegistrationService;\nimport org.Server.Service.User.UserService;\n\nimport java.net.URL;\nimport java.rmi.NotBoundException;\nimport java.rmi.RemoteException;\nimport java.rmi.registry.LocateRegistry;\nimport java.rmi.registry.Registry;\nimport java.util.ResourceBundle;\n\npublic class ServerManager implements Initializable {\n    private RegistrationService registrationService;\n    private LoginService loginService;\n    private Registry registry;\n\n\n    @Override\n    public void initialize(URL url, ResourceBundle resourceBundle) {\n        try {\n            DatabaseConnectionManager connectionManager = DatabaseConnectionManager.getInstance();\n            UserService userService = new UserService(new UserRepository(connectionManager.getMyConnection()));\n            ServiceFactoryI serviceFactory = new ServiceFactory(userService);\n            registrationService = (RegistrationService) serviceFactory.createUserService().getRegistrationService();\n            loginService = (LoginService) serviceFactory.createUserService().getLoginService();\n            registry = LocateRegistry.createRegistry(1099);\n        } catch (RemoteException e) {\n            throw new RuntimeException(e);\n        }\n\n\n    }\n    @FXML\n    private void start (){\n        try {\n            registry.rebind(\"loginService\", loginService);\n            registry.rebind(\"registrationService\", registrationService);\n            System.out.println(\"working\");\n        } catch (RemoteException e) {\n            throw new RuntimeException(e);\n        }\n    }\n    @FXML\n    private void stop (){\n        try {\n            for (String name : registry.list()){\n                registry.unbind(name);\n            }\n            System.out.println(\"stopping\");\n        } catch (RemoteException | NotBoundException e) {\n            throw new RuntimeException(e);\n        }\n    }\n}\n
===================================================================
diff --git a/server/src/main/java/org/Server/GUI/Controllers/ServerManager.java b/server/src/main/java/org/Server/GUI/Controllers/ServerManager.java
--- a/server/src/main/java/org/Server/GUI/Controllers/ServerManager.java	
+++ b/server/src/main/java/org/Server/GUI/Controllers/ServerManager.java	
@@ -1,15 +1,8 @@
 package org.Server.GUI.Controllers;
 
-import Interfaces.ServiceFactoryI;
+import Interfaces.RemoteUserService;
 import javafx.fxml.FXML;
 import javafx.fxml.Initializable;
-import javafx.scene.control.Button;
-import org.Server.Repository.DatabaseConnectionManager;
-import org.Server.Repository.UserRepository;
-import org.Server.Service.Factories.ServiceFactory;
-import org.Server.Service.Factories.UserServiceFactory;
-import org.Server.Service.User.LoginService;
-import org.Server.Service.User.RegistrationService;
 import org.Server.Service.User.UserService;
 
 import java.net.URL;
@@ -20,31 +13,24 @@
 import java.util.ResourceBundle;
 
 public class ServerManager implements Initializable {
-    private RegistrationService registrationService;
-    private LoginService loginService;
+    private RemoteUserService userService;
     private Registry registry;
 
 
     @Override
     public void initialize(URL url, ResourceBundle resourceBundle) {
         try {
-            DatabaseConnectionManager connectionManager = DatabaseConnectionManager.getInstance();
-            UserService userService = new UserService(new UserRepository(connectionManager.getMyConnection()));
-            ServiceFactoryI serviceFactory = new ServiceFactory(userService);
-            registrationService = (RegistrationService) serviceFactory.createUserService().getRegistrationService();
-            loginService = (LoginService) serviceFactory.createUserService().getLoginService();
+            userService = new UserService();
             registry = LocateRegistry.createRegistry(1099);
         } catch (RemoteException e) {
             throw new RuntimeException(e);
         }
-
-
     }
     @FXML
     private void start (){
         try {
-            registry.rebind("loginService", loginService);
-            registry.rebind("registrationService", registrationService);
+            registry.rebind("UserServices", userService);
+
             System.out.println("working");
         } catch (RemoteException e) {
             throw new RuntimeException(e);
diff --git a/server/src/main/resources/fxml/ServerGUI.fxml b/server/src/main/resources/ServerFxml/ServerGUI.fxml
rename from server/src/main/resources/fxml/ServerGUI.fxml
rename to server/src/main/resources/ServerFxml/ServerGUI.fxml
